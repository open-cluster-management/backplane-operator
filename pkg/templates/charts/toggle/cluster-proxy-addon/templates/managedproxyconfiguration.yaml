apiVersion: proxy.open-cluster-management.io/v1alpha1
kind: ManagedProxyConfiguration
metadata:
  name: cluster-proxy
spec:
  authentication:
    dump:
      secrets: {}
    signer:
      type: SelfSigned
  proxyServer:
    image: '{{ .Values.global.imageOverrides.cluster_proxy_addon }}'
    namespace: '{{ .Values.global.namespace }}'
    replicas: {{ .Values.hubconfig.replicaCount }}
    entrypoint:
      type: Hostname
      hostname:
        value: cluster-proxy-anp.{{ .Values.hubconfig.clusterIngressDomain }}
      port: 443
    additionalArgs:
      - "--keepalive-time=30s" # Use this to keep connection from proxy-agent stay alive
      - "--cipher-suites=TLS_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_AES_128_GCM_SHA256,TLS_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"
    nodePlacement:
      {{- with .Values.hubconfig.tolerations }}
      tolerations:
      {{- range . }}
      - {{ if .Key }} key: {{ .Key }} {{- end }}
        {{ if .Operator }} operator: {{ .Operator }} {{- end }}
        {{ if .Value }} value: {{ .Value }} {{- end }}
        {{ if .Effect }} effect: {{ .Effect }} {{- end }}
        {{ if .TolerationSeconds }} tolerationSeconds: {{ .TolerationSeconds }} {{- end }}
        {{- end }}
      {{- end }}
      {{- with .Values.hubconfig.nodeSelector }}
      nodeSelector:
  {{ toYaml . | indent 8 }}
      {{- end }}
  proxyAgent:
    image: '{{ .Values.global.imageOverrides.cluster_proxy_addon }}'
    replicas: 1
    imagePullSecrets:
    - "open-cluster-management-image-pull-credentials"
